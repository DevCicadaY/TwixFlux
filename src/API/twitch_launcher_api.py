import time  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –≤—Ä–µ–º–µ–Ω–µ–º
import psutil  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏ —Å–∏—Å—Ç–µ–º—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)
import os  # –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –æ–ø–µ—Ä–∞—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º–æ–π, –Ω–∞–ø—Ä–∏–º–µ—Ä, –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–∏ —Å —Ñ–∞–π–ª–∞–º–∏ –∏ –ø—É—Ç—è–º–∏
import sys  # –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ –¥—Ä—É–≥–∏—Ö —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
from fastapi import FastAPI, HTTPException  # FastAPI –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ HTTPException –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
from fastapi.middleware.cors import CORSMiddleware  # CORS middleware –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ API —Å –¥—Ä—É–≥–∏—Ö –¥–æ–º–µ–Ω–æ–≤
from fastapi.responses import HTMLResponse  # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ HTML-—Å—Ç—Ä–∞–Ω–∏—Ü –≤ –æ—Ç–≤–µ—Ç–µ –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã
from fastapi.responses import FileResponse  # –î–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–∞–π–ª–æ–≤ –≤ –æ—Ç–≤–µ—Ç–∞—Ö API
from threading import Thread  # –î–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–¥–∞—á –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ñ–æ–Ω–æ–≤—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã)
from src.core.retry_launcher import retry_twitch_main  # –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ Twitch
from src.modules.browser.browser_launcher import quit_browser  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã —Å –±—Ä–∞—É–∑–µ—Ä–æ–º
from src.utils.logger import logger  # –õ–æ–≥–≥–µ—Ä –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤ –≤ —Ñ–∞–π–ª –∏–ª–∏ –∫–æ–Ω—Å–æ–ª—å
from src.utils import global_vars  # –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
from src.utils.terminate_process import terminate_processes  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤, –Ω–∞–ø—Ä–∏–º–µ—Ä, –∑–∞–≤–∏—Å—à–∏—Ö
from src.modules.twitch.settings_twitch import get_stream_url, update_stream_url  # –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å URL —Å—Ç—Ä–∏–º–∞
from pydantic import BaseModel  # Pydantic –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö
from src.modules.twitch.auto_shutdown_timer import update_auto_shutdown_timer  # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
# –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è FastAPI
app = FastAPI()

# –†–∞–∑—Ä–µ—à–∞–µ–º CORS –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –¥–æ–º–µ–Ω—ã –¥–ª—è –∫—Ä–æ—Å—Å-–¥–æ–º–µ–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
    allow_credentials=True,  # –†–∞–∑—Ä–µ—à–∞–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É –∫—É–∫–∏
    allow_methods=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ HTTP-–º–µ—Ç–æ–¥—ã (GET, POST –∏ —Ç.–¥.)
    allow_headers=["*"],  # –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏
)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã (GET-–∑–∞–ø—Ä–æ—Å)
@app.get("/", response_class=HTMLResponse)
async def index():
    """–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ API."""
    
    # –ü–æ–ª—É—á–∞–µ–º –∞–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
    project_root = os.path.abspath(os.path.join(os.path.dirname(__file__), '..'))

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ index.html –≤ –ø–∞–ø–∫–µ 'API'
    settings_path = os.path.join(project_root, 'API', 'index.html')

    # –õ–æ–≥–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
    logger.info(f"–ü—É—Ç—å –∫ —Ñ–∞–π–ª—É index.html: {settings_path}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
    if not os.path.exists(settings_path):
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω, –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–∞–µ–º –≤ –ª–æ–≥–µ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 404
        logger.warning(f"‚ö†Ô∏è –§–∞–π–ª {settings_path} –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è.")
        return HTMLResponse(content="<h1>‚ö†Ô∏è –§–∞–π–ª index.html –Ω–µ –Ω–∞–π–¥–µ–Ω.</h1>", status_code=404)

    try:
        # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –∑–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        logger.info("–ó–∞–ø—É—Å–∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")

        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —á–µ—Ä–µ–∑ HTTP, –∏—Å–ø–æ–ª—å–∑—É—è FileResponse
        logger.info(f"‚úÖ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª {settings_path} –ø–æ HTTP.")
        return FileResponse(settings_path)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º FileResponse –¥–ª—è –æ—Ç–¥–∞—á–∏ —Ñ–∞–π–ª–∞

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return HTMLResponse(content="<h1>‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã.</h1>", status_code=500)

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –º–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏ Twitch (POST-–∑–∞–ø—Ä–æ—Å)
@app.post("/start_twitch")
async def start_twitch():
    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –∑–∞–ø—É—Å–∫ —Ñ—É–Ω–∫—Ü–∏–∏ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
        logger.info("üîÅ –ó–∞–ø—É—Å–∫ twitch_main –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ.")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é retry_twitch_main –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ –¥–ª—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
        thread = Thread(target=retry_twitch_main, daemon=True)  # –°–æ–∑–¥–∞–µ–º –ø–æ—Ç–æ–∫ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏
        thread.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–æ—Ç–æ–∫
        return {"status": "success", "message": "Twitch automation started. üéÆ"}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Twitch
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ Twitch: {str(e)}")
        return {"status": "error", "message": f"–û—à–∏–±–∫–∞: {str(e)}. ‚ùå"}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ (GET-–∑–∞–ø—Ä–æ—Å)
@app.get("/browser_info")
async def get_browser_info():
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ –∏–∑ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
        browser_info = {
            "session_id": global_vars.session_id,  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —Å–µ—Å—Å–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞
            "driver": str(global_vars.driver) if global_vars.driver else None,  # –°—Ç—Ä–æ–∫–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥—Ä–∞–π–≤–µ—Ä–∞, –µ—Å–ª–∏ –æ–Ω —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
            "pid": global_vars.pid,  # –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø—Ä–æ—Ü–µ—Å—Å–∞ –±—Ä–∞—É–∑–µ—Ä–∞
            "server_url": global_vars.server_url  # URL —Å–µ—Ä–≤–µ—Ä–∞
        }
        
        # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
        logger.info(f"üîç –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±—Ä–∞—É–∑–µ—Ä–µ: {browser_info}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
        return {"status": "success", "browser_info": browser_info}  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±—Ä–∞—É–∑–µ—Ä–µ

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É, –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±—Ä–∞—É–∑–µ—Ä–µ: {str(e)}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å –ø–æ–¥—Ä–æ–±–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
        return {"status": "error", "message": f"–û—à–∏–±–∫–∞: {str(e)}. ‚ùå"}

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç—ã –±—Ä–∞—É–∑–µ—Ä–∞ (POST-–∑–∞–ø—Ä–æ—Å)
@app.post("/stop_browser")
async def stop_browser():
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –±—Ä–∞—É–∑–µ—Ä–∞ –∏ —Å–≤—è–∑–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å, –µ—Å–ª–∏ session_id —Å–æ–≤–ø–∞–¥–∞–µ—Ç.
    """
    logger.info("üõë –ó–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞ –ø–æ–ª—É—á–µ–Ω.")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω –ª–∏ –±—Ä–∞—É–∑–µ—Ä (–µ—Å–ª–∏ session_id –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∑–Ω–∞—á–∏—Ç, –±—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω)
    if global_vars.session_id is None:
        logger.error("‚ö†Ô∏è –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω.")
        # –ï—Å–ª–∏ –±—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É 400 (Bad Request)
        raise HTTPException(status_code=400, detail="–ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω. üí§")

    try:
        # –õ–æ–≥–∏—Ä—É–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É session_id –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º –±—Ä–∞—É–∑–µ—Ä–∞
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ session_id: {global_vars.session_id}")
        
        # –ó–∞–∫—Ä—ã–≤–∞–µ–º –±—Ä–∞—É–∑–µ—Ä —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ quit_browser
        quit_browser(global_vars.driver)
        logger.info("‚úÖ –ë—Ä–∞—É–∑–µ—Ä —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç.")
        
        # –ï—Å–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–∞—É–∑–µ—Ä–∞ –∑–∞–ø—É—â–µ–Ω, –∑–∞–≤–µ—Ä—à–∏—Ç—å –µ–≥–æ –ø–æ pid
        if global_vars.pid:
            shutdown_browser_process(global_vars.pid)  # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±—Ä–∞—É–∑–µ—Ä–∞
        # –û—á–∏—â–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –±—Ä–∞—É–∑–µ—Ä–æ–º
        global_vars.session_id = None
        global_vars.driver = None
        global_vars.pid = None
        global_vars.server_url = None

        logger.info("‚úÖ –ë—Ä–∞—É–∑–µ—Ä –∏ –ø—Ä–æ—Ü–µ—Å—Å —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
        return {"status": "success", "message": "Process and browser successfully completed. üõë"}

    except Exception as e:
        # –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –ø—Ä–æ—Ü–µ—Å—Å–µ: {str(e)}")
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—à–∏–±–∫—É —Å–µ—Ä–≤–µ—Ä–∞ —Å –∫–æ–¥–æ–º 500
        raise HTTPException(status_code=500, detail="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ. ‚ùå")

# –ú–∞—Ä—à—Ä—É—Ç –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ (POST-–∑–∞–ø—Ä–æ—Å)
@app.post("/terminate_processes")
async def terminate_processes_api():
    # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ terminate_processes
    terminate_processes()
    # –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    logger.info("‚úÖ –ü—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —É—Å–ø–µ—à–Ω—ã–π –æ—Ç–≤–µ—Ç
    return {"status": "success", "message": "Processes completed. üîö"}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –±—Ä–∞—É–∑–µ—Ä–∞
def shutdown_browser_process(pid: int):
    """–§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –≤—Å–µ—Ö —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å –Ω–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–≤."""
    try:
        # –ù–∞—Ö–æ–¥–∏–º –ø—Ä–æ—Ü–µ—Å—Å –ø–æ PID
        process = psutil.Process(pid)
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º –≤—Å–µ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
        for child in process.children(recursive=True):
            child.terminate()
        
        # –ó–∞–≤–µ—Ä—à–∞–µ–º —Å–∞–º –ø—Ä–æ—Ü–µ—Å—Å
        process.terminate()
        
        # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
        process.wait()
        
        logger.info(f"‚úÖ –ü—Ä–æ—Ü–µ—Å—Å —Å PID {pid} –∏ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±—ã–ª–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω—ã.")
    except psutil.NoSuchProcess:
        logger.error(f"‚ùå –ü—Ä–æ—Ü–µ—Å—Å —Å PID {pid} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    except psutil.AccessDenied:
        logger.error(f"‚ùå –ù–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID {pid}.")
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ —Å PID {pid}: {e}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞ —Å –ø–æ–º–æ—â—å—é —Ñ—É–Ω–∫—Ü–∏–∏ get_stream_url()
current_streamer = get_stream_url()  # –ü—Ä–∏–º–µ—Ä –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è

# –ú–æ–¥–µ–ª—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–º–µ–Ω–∏ —Å—Ç—Ä–∏–º–µ—Ä–∞
class StreamerRequest(BaseModel):
    streamer: str

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞
@app.get("/get_streamer")
async def get_streamer():
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ —Å—Ç—Ä–∏–º–µ—Ä–∞.
    –ò–∑–≤–ª–µ–∫–∞–µ—Ç –∏–º—è —Å—Ç—Ä–∏–º–µ—Ä–∞ –∏–∑ —Ç–µ–∫—É—â–µ–≥–æ URL (—É–¥–∞–ª—è–µ—Ç https://www.twitch.tv/).
    """
    streamer_name = current_streamer.replace("https://www.twitch.tv/", "")
    return {"streamer": streamer_name}

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Å—Ç—Ä–∏–º–µ—Ä–∞
@app.post("/change_streamer")
async def change_streamer(request: dict):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∏–º–µ–Ω–∏ —Å—Ç—Ä–∏–º–µ—Ä–∞.
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–º—è —Å—Ç—Ä–∏–º–µ—Ä–∞ –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π URL.
    """
    new_streamer = request.get('streamer')  # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Å—Ç—Ä–∏–º–µ—Ä–∞
    if not new_streamer:
        raise HTTPException(status_code=400, detail="Streamer name is required.")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –∏–º—è —Å—Ç—Ä–∏–º–µ—Ä–∞
    global current_streamer
    current_streamer = new_streamer

    # –û–±–Ω–æ–≤–ª—è–µ–º URL —Å—Ç—Ä–∏–º–µ—Ä–∞ –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
    new_url = f"https://www.twitch.tv/{new_streamer}"
    update_stream_url(new_url)  # –û–±–Ω–æ–≤–ª—è–µ–º URL

    return {"status": "success", "message": f"Streamer changed to {new_streamer} and URL updated."}

# –ú–æ–¥–µ–ª—å –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞
class ShutdownTimerRequest(BaseModel):
    time: int  # –ü–∞—Ä–∞–º–µ—Ç—Ä time –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –¥–ª—è —É–∫–∞–∑–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ —Ç–∞–π–º–µ—Ä–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö

@app.get("/get_shutdown_timer")
async def get_shutdown_timer():
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –∏ –∏–∑–≤–ª–µ–∫–∞–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–ª—é—á–∞ "AUTO_SHUTDOWN_TIMER".
    """
    browser_settings = load_browser_settings()  # –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±—Ä–∞—É–∑–µ—Ä–∞
    if browser_settings is None:
        raise HTTPException(status_code=400, detail="Failed to load browser settings.")
    
    auto_shutdown_timer = browser_settings.get("AUTO_SHUTDOWN_TIMER", "Not set")  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ç–∞–π–º–µ—Ä –∏–ª–∏ "Not set"
    return {"AUTO_SHUTDOWN_TIMER": auto_shutdown_timer}

@app.post("/change_shutdown_timer")
async def change_shutdown_timer(request: ShutdownTimerRequest):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è.
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–æ–≤—ã–π —Ç–∞–π–º–µ—Ä –≤ —Å–µ–∫—É–Ω–¥–∞—Ö —á–µ—Ä–µ–∑ POST-–∑–∞–ø—Ä–æ—Å –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
    """
    new_time = request.time  # –ü–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –∏–∑ —Ç–µ–ª–∞ –∑–∞–ø—Ä–æ—Å–∞
    if new_time <= 0:
        raise HTTPException(status_code=400, detail="Timer must be a positive integer.")  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å –∑–Ω–∞—á–µ–Ω–∏—è

    # –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ç–∞–π–º–µ—Ä–∞ —Å –Ω–æ–≤—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
    update_auto_shutdown_timer(new_time)
    
    return {"status": "success", "message": f"Shutdown timer updated to {new_time} seconds."}

if __name__ == '__main__':
    import uvicorn  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º Uvicorn –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ API-—Å–µ—Ä–≤–µ—Ä–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Uvicorn.")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
    uvicorn.run(app, host="127.0.0.1", port=8000)  # –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ö–æ—Å—Ç–µ –∏ –ø–æ—Ä—Ç—É